---

defaults: # default values picked from here.
  formatting:  # applicable only for exporting excel.
    read_only: false
    hidden: false  # Sheet will be exported as hidden
    table_style:
      name: "TableStyleMedium2"  # Excel built-in style names. TableStyleLight1 - TableStyleLight21, TableStyleMedium1 - TableStyleMedium28, TableStyleDark1 - TableStyleDark11
      show_last_column: false  # if set to true, excel will show last column with bold font
      show_row_stripes: true  # if set to true, excel will show alternate rows with light colored background
    alignment:
      wrap_text: true
      horizontal: justify
    data:  # Applicable at column level
      - attributes: ["name"]
        chars_wrap: 20
      - attributes: ["description"]
        chars_wrap: 35
      - attributes: ["*"]
        chars_wrap: 10
        comment:
          text: ""  # comment will be ignored if text == ""
          author: "admin@example.com"  # Excel shows author name along with comment. This col can be used to provide author name
          height_len: 110
          width_len: 230

datasets:
  comp_version:
    model_name: "panopticum.models.ComponentVersionModel"
    index_key: ["component", "version"]
    data:  # exporter will export columns in order they appear here.
      - attributes: ["component"]
        references: ["$model.Name"]
      - attributes: ["version"]
      - attributes: ["dev_*"]
        references: ["$model.name"]
      - attributes: ["dev_raml", "dev_repo", "dev_public_repo", "dev_jira_component", "dev_build_jenkins_job",
                  "dev_docs", "dev_public_docs", "dev_commit_link", "dev_api_is_public"]
      - attributes: ["owner_*"]
        references: ["$model.email"]

  component:
    model_name: "panopticum.models.ComponentModel"
    index_key: ["name"]
    data:
      - attributes: ["name", "description", "life_status"]
      - attributes: ["runtime_type", "data_privacy_class", "category", "subcategory", "vendor"]
        references: ["$model.name"]

  component_category:
    model_name: "panopticum.models.ComponentCategoryModel"
    index_key: ["name"]
    data:
      - attributes: ["*"]

  component_subcategory:
    model_name: "panopticum.models.ComponentSubcategoryModel"
    index_key: ["category", "name"]
    data:
      - attributes: ["category"]
        references: ["$model.name"]
      - attributes: ["name", "description"]

  component_dependency:
    model_name: "panopticum.models.ComponentDependencyModel"
    index_key: ["version", "component"]
    data:
      - attributes: ["version"]
        references: ["$model.component", "$model.version"]
      - attributes: ["component"]
        references: ["$model.name"]
      - attributes: ["type", "notes"]

  component_deployment:
    model_name: "panopticum.models.ComponentDeploymentModel"
    index_key: ["component_version", "location_class", "product_version", "environment"]
    data:
      - attributes: ["name", "service_name", "binary_name"]
      - attributes: ["component_version"]
        references: ["$model.component", "$model.version"]
      - attributes: ["location_class", "product_version", "environment", "open_ports"]
        references: ["$model.name"]
      - attributes: ["notes"]

  product_version:
    model_name: "panopticum.models.ProductVersionModel"
    index_key: ["name"]
    data:
      - attributes: ["shortname", "name", "order"]
      - attributes: ["family"]
        references: ["$model.name"]

  language:
    model_name: "panopticum.models.ProgrammingLanguageModel"
    index_key: ["name"]
    data:
      - attributes: ["name"]

  _multi_tables:  # Special case, should be used with special name
    model_names: ["panopticum.models.ORMModel", "panopticum.models.FrameworkModel","panopticum.models.ComponentDataPrivacyClassModel",
                  "panopticum.models.ComponentRuntimeTypeModel","panopticum.models.CountryModel","panopticum.models.DatabaseVendorModel",
                  "panopticum.models.DeploymentEnvironmentModel", "panopticum.models.DeploymentLocationClassModel",
                  "panopticum.models.LoggerModel", "panopticum.models.ProductFamilyModel", "panopticum.models.SoftwareVendorModel",
                  "panopticum.models.TCPPortModel", "panopticum.models.DatacenterModel"]
    index_key: ["name"]
    data:
      - attributes: ["*"]
        references: ["$model.name"]

filters:  # TODO: isn't implemented yet
  latest_record:
    LATEST:  # All latest record - supported with number/datetime comparable types e.g. int, float, datetime
      attributes: ["order"]
    ASC_SORT:
      attributes: ["component"]
  wo_latest_record:
    ALL_WO_LATEST:  # All records but no latest record - supported with number/datetime comparable types e.g. int, float, datetime
      attributes: ["order"]
    DESC_SORT:
      attributes: ["component"]

sheets:
  - sheet_name: "CompVersions"  # Will append numeric number if sheet already exists in excel
    view: latest_record  # Acts as data dataview
    dataset: comp_version  # all columns defined in dataset is exported.
    formatting:
      tab_color: "00008B"
      position: 1
      data:
        - attributes: ["component"]
          chars_wrap: 20
        - attributes: ["dev_raml", "dev_repo", "dev_public_repo", "dev_jira_component", "dev_build_jenkins_job",
                    "dev_docs", "dev_public_docs", "dev_commit_link", "dev_api_is_public"]
          chars_wrap: 25
          comment:
            text: "Multiple entries separated by space"
        - attributes: ["dev_*"]  # sequence of dev_* matters, wildcard entries should be at the end and absolute entries should be before it
                              #  the first match entry is always chosen
          chars_wrap: 20
          comment:
            text: "Multiple entries, each on separate line and starts with '* '"
        - attributes: ["owner_*"]
          chars_wrap: 30
          read_only: true               # only export HG: TODO: and has no effect if whole worksheet is not locked

#  - sheet_name: "CompVersion_wo_latest"
#    dataset: comp_version
#    view: wo_latest_record  # Acts as data dataview
#    formatting:
#      tab_color: "00008B"
#      position: 2
#      data:
#        - attributes: ["dev_*"]
#          chars_wrap: 20
#          comment:
#            text: "Multiple entries, each on separate line"
#        - attributes: ["dev_raml", "dev_repo", "dev_public_repo", "dev_jira_component", "dev_build_jenkins_job",
#                    "dev_docs", "dev_public_docs", "dev_commit_link", "dev_api_is_public"]
#          chars_wrap: 35
#          comment:
#            text: "Multiple entries separated by space"
#        - attributes: ["owner_*"]
#          chars_wrap: 30
#          read_only: true               # only export

  - sheet_name: "Components"
    dataset: component
    formatting:
      tab_color: "00008B"
      position: 2
      data:
        - attributes: ["description"]
          chars_wrap: 50
        - attributes: ["runtime_type", "data_privacy_class", "category", "subcategory", "vendor"]
          chars_wrap: 20

  - sheet_name: "CompCategories"
    dataset: component_category
    formatting:
      position: 3
      data:
        - attributes: ["description"]
          chars_wrap: 50

  - sheet_name: "CompSubCategories"
    dataset: component_subcategory
    formatting:
      position: 4
      data:
        - attributes: ["category"]
          chars_wrap: 20
        - attributes: ["description"]
          chars_wrap: 50

  - sheet_name: "CompDependency"
    dataset: component_dependency
    formatting:
      position: 5
      read_only: true  # sheet won't be editable
      data:
        - attributes: ["version"]
          chars_wrap: 30
        - attributes: ["component"]
          chars_wrap: 20
        - attributes: ["notes"]
          chars_wrap: 50

  - sheet_name: "CompDeployment"
    dataset: component_deployment
    formatting:
      position: 6
      read_only: true
      data:
        - attributes: ["open_ports"] # additional properties for open_port
          comment:
            text: "Allows multiple entries in a cell. Prefix each entry with '* ' and end with end of line. Each entry should match `name` in TCPPortModel. e.g. * HTTP-8080"
          read_only: true
        - attributes: ["notes"]
          chars_wrap: 50
        - attributes: ["service_name", "binary_name", "component_version", "location_class", "product_version", "environment"]
          chars_wrap: 20

  - sheet_name: "Languages"
    dataset: language
    formatting:
      position: 7

  - sheet_name: "ProdVersion"
    dataset: product_version
    formatting:
      position: 8
      read_only: true
      data:
        - attributes: ["family"]
          chars_wrap: 30

  - sheet_name: "*" # use model_name as name
    dataset: _multi_tables
    formatting:
      position: -1  # Append
      read_only: true
      data:
        - attributes: ["components_deployments", "grafana", "metrics", "info"]
          chars_wrap: 30

